package datp.broker;

import datp.Config;
import datp.network.*;
import datp.network.remoting.*;

import java.net.MalformedURLException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;

public class Broker {
	
	public static void FinamTC(Stage stage) {
		
		try {
			BrokerConnectorProxy connector = BrokerConnectorProxyFactory.getConnector("finam-transaq");
			NetworkCommandPath commander = NetworkCommandFactory.getCommander("Remote", Config.FinamTC.RemoteCommandPath);
			NetworkDataPath algoDataPath = NetworkDataFactory.getDataPath("Remote", Config.FinamTC.RemoteAlgoDataPath);
			NetworkDataPath proxyDataPath = NetworkDataFactory.getDataPath("Remote", Config.FinamTC.RemoteProxyDataPath);
			
			switch (stage) {
			
			case START: 
				((RemoteCommandPathApiAdapter)commander).initialize(connector, Config.FinamTC.RemoteCommandPath, Config.FinamTC.RemoteCommandPort);
				((RemoteDataPathApiAdapter)algoDataPath).initialize(Config.FinamTC.RemoteAlgoDataPath);
				((RemoteDataPathApiAdapter)proxyDataPath).initialize(Config.FinamTC.RemoteProxyDataPath);
				connector.setDataPaths(algoDataPath, proxyDataPath);
				connector.connect();
				break;
			
			case STOP:
				connector.disconnect();
				((RemoteCommandPathApiAdapter)commander).deinitialize();
				break;
			}
		
		} catch (RemoteException | MalformedURLException | NotBoundException e) {
			e.printStackTrace(System.out);
		}
	}
	
	public static void FinamHistorical(Stage stage) {
		
		try {
			BrokerConnectorProxy connector = BrokerConnectorProxyFactory.getConnector("finam-historical");
			NetworkCommandPath commander = NetworkCommandFactory.getCommander("Remote", Config.FinamHistory.RemoteCommandPath);
			NetworkDataPath algoDataPath = NetworkDataFactory.getDataPath("Remote", Config.FinamHistory.RemoteAlgoDataPath);
			NetworkDataPath proxyDataPath = NetworkDataFactory.getDataPath("Remote", Config.FinamHistory.RemoteProxyDataPath);
			
			switch (stage) {
			
			case START: 
				((RemoteCommandPathApiAdapter)commander).initialize(connector, Config.FinamHistory.RemoteCommandPath, Config.FinamHistory.RemoteCommandPort);
				((RemoteDataPathApiAdapter)algoDataPath).initialize(Config.FinamHistory.RemoteAlgoDataPath);
				((RemoteDataPathApiAdapter)proxyDataPath).initialize(Config.FinamHistory.RemoteProxyDataPath);
				connector.setDataPaths(algoDataPath, proxyDataPath);
				connector.connect();
				break;
			
			case STOP:
				connector.disconnect();
				((RemoteCommandPathApiAdapter)commander).deinitialize();
				break;
			}
		
		} catch (RemoteException | MalformedURLException | NotBoundException e) {
			e.printStackTrace(System.out);
		}
	}
}
