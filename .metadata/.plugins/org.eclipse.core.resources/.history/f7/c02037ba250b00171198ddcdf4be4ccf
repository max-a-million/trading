package datp.network.remoting;

import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.server.UnicastRemoteObject;

import datp.logging.Logs;
import datp.network.NetworkCommandPath;
import datp.network.remoting.RemoteCommandPathApiAdapter.RemoteCommandConsumer;

public class RemoteServer<ClassApi> {
	
	private RemoteCommandConsumer CommandPath;
	private String Uri;
	private int Port;
	
	public RemoteServer<ClassApi>() {
	}
	
	public void initialize(String uri, String port) {
		
		try {
		
			Uri = uri;
			Port = Integer.parseInt(port);
			LocateRegistry.createRegistry(Port);
			CommandPath = new RemoteCommandConsumer();
			Naming.rebind(Uri, CommandPath);
		
		} catch (RemoteException | MalformedURLException e) {
			
		}

	}
	
	public void deinitialize() {
		
		try {
		
			Naming.unbind(Uri);
			UnicastRemoteObject.unexportObject(CommandPath, true);
			Logs.message("Remote CM", "deinitialize", "ok");
			
		} catch (RemoteException | MalformedURLException | NotBoundException e) {
			
		}
	}
	
	public class RemoteCommandConsumer extends UnicastRemoteObject implements RemoteCommandPathApi {
		
		protected RemoteCommandConsumer() throws RemoteException {
		}

		public void GetHistory() throws RemoteException {
			CommandBridge.GetHistory();
			Logs.message("Remoting -> Command API", "GetHistory", "ok");
		}
	}
}
